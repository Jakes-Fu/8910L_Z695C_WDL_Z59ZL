/* Copyright 2004-2009 Myriad Group AG. All Rights Reserved. */
/* THIS FILE IS AUTOMATICALLY GENERATED */

#ifndef _JBED_JAVANATIVE_H_
#define _JBED_JAVANATIVE_H_

#if defined(__cplusplus)
extern "C" {
#endif
jboolean JBNI_EXPORT JbniS_com_jbed_ams_AmsCallHandler_nativeAmsListenerDown(void);
jboolean JBNI_EXPORT JbniS_com_jbed_ams_AmsCallHandler_nativeAmsListenerUp(void);
jint JBNI_EXPORT JbniS_com_jbed_ams_AmsToolkitBase_nSignalAsyncEvent(jint, jint, struct INSTANCE_java_lang_Object_s * );
jint JBNI_EXPORT JbniS_com_jbed_ams_AmsToolkitBase_signalEvent(jint, jint, struct INSTANCE_java_lang_Object_s * );
BYTEARRAY JBNI_EXPORT OPL_ams_getCommandStateBuffer(void);
jboolean JBNI_EXPORT OPL_ams_saveCommandStateBuffer(BYTEARRAY);
void JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryCallHandler_handleCachedPushEvents(void);
void JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_cancel(jint);
void JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_commit(STRING_INSTANCE, jboolean, jboolean);
void JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_deleteSuite(STRING_INSTANCE, jboolean);
jint JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_fullListConnections0(INTARRAY);
STRING_INSTANCE JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_getField(jint, jint);
STRING_INSTANCE JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_getFieldByConnector(STRING_INSTANCE, jint, STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_launch0(jint);
jint JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_listConnections0(jboolean, jboolean, STRING_INSTANCE, INTARRAY);
jlong JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_registerAlarm0(jlong, STRING_INSTANCE, jboolean);
void JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_registerConnection0(STRING_INSTANCE, STRING_INSTANCE, STRING_INSTANCE, STRING_INSTANCE, jint, jboolean);
jboolean JBNI_EXPORT JbniS_com_jbed_ams_PushRegistryImpl_unregisterConnection0(STRING_INSTANCE, STRING_INSTANCE, STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_ams_Scheduler_nativeSetUpcallReceiverReadyState(jboolean);
jint JBNI_EXPORT JbniS_com_jbed_io_FileSystemCallHandler_nativeFsListenerDown(void);
jint JBNI_EXPORT JbniS_com_jbed_io_FileSystemCallHandler_nativeFsListenerUp(REFARRAY, jint);
void JBNI_EXPORT JbniV_com_jbed_io_JbedFileConnection_finalize(struct INSTANCE_com_jbed_io_JbedFileConnection_s * );
void JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeAvailableSize(STRING_INSTANCE, LONGARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeCanRead(STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeCanWrite(STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeClose(jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeDelete(STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeDirectorySize(STRING_INSTANCE, jboolean, LONGARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeExists(STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeFlush(jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeIsHidden(STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeLastModified(STRING_INSTANCE, LONGARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeLength(STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeListClose(INTARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeListNextEntry(STRING_INSTANCE, INTARRAY, CHARARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeListOpen(STRING_INSTANCE, INTARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeMkDir(STRING_INSTANCE);
jint JBNI_EXPORT JbniV_com_jbed_io_JbedFileConnection_nativeOpen(struct INSTANCE_com_jbed_io_JbedFileConnection_s * , jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativePermission(STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeRead(jint, BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeRename(STRING_INSTANCE, STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeSetHidden(STRING_INSTANCE, jboolean);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeSetPosition(jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeSetReadable(STRING_INSTANCE, jboolean);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeSetWritable(STRING_INSTANCE, jboolean);
void JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeTotalSize(STRING_INSTANCE, LONGARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeTruncate(jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeValidFilename(STRING_INSTANCE, jint);
jint JBNI_EXPORT JbniS_com_jbed_io_JbedFileConnection_nativeWrite(jint, BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniV_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxDispatcherImpl_nGetState(struct INSTANCE_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxDispatcherImpl_s * );
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nAddCommand(struct INSTANCE_javax_microedition_lcdui_Command_s * );
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nCreateControl(struct INSTANCE_javax_microedition_lcdui_TextBox_s * , STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nDisposeControl(void);
jint JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nGetCaretPosition(void);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nHide(void);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nRemoveCommand(struct INSTANCE_javax_microedition_lcdui_Command_s * );
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nReplaceText(jint, jint, STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nSetConstraints(jint);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nSetInitialInputMode(STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nSetMaxSize(jint);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nSetText(STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nSetTicker(STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nSetTitle(STRING_INSTANCE);
void JBNI_EXPORT JbniS_com_jbed_midp_lcdui_toolkit_peer_NativeTextBoxPeer_nShow(void);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_drawPixels(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , SHORTARRAY, jboolean, jint, jint, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_drawPolygon(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , INTARRAY, jint, INTARRAY, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_drawRegion0(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , struct INSTANCE_javax_microedition_lcdui_Image_s * , jint, jint, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_drawTriangle(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , jint, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_fillPolygon(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , INTARRAY, jint, INTARRAY, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_fillTriangle(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , jint, jint, jint, jint, jint, jint, jint);
jint JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_getNativePixelFormat(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * );
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_getPixelsI(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , INTARRAY, jint, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_nokia_NokiaGraphicsImpl_getPixelsS(struct INSTANCE_com_jbed_nokia_NokiaGraphicsImpl_s * , SHORTARRAY, jint, jint, jint, jint, jint, jint, jint);
BYTEARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMItemEnumerationImpl_getNextItem0(struct INSTANCE_com_jbed_pim_PIMItemEnumerationImpl_s * , struct INSTANCE_com_jbed_pim_PIMItemImpl_s * , struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
BYTEARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMItemImpl_getCategories0(struct INSTANCE_com_jbed_pim_PIMItemImpl_s * );
jint JBNI_EXPORT JbniV_com_jbed_pim_PIMItemImpl_maxCategories0(struct INSTANCE_com_jbed_pim_PIMItemImpl_s * );
STRING_INSTANCE JBNI_EXPORT JbniV_com_jbed_pim_PIMItemImpl_storeItem0(struct INSTANCE_com_jbed_pim_PIMItemImpl_s * );
void JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_addCategory0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * , STRING_INSTANCE);
void JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_close0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
void JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_deleteCategory0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * , STRING_INSTANCE);
void JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_finalize(struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
BYTEARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_getCategories0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
INTARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_getSuppArrElems0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * , jint);
INTARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_getSuppAttrs0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * , jint);
INTARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_getSuppFields0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
jint JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_maxCategories0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
jint JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_maxValues0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * , jint);
STRING_INSTANCE JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_open0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * );
void JBNI_EXPORT JbniV_com_jbed_pim_PIMListImpl_renameCategory0(struct INSTANCE_com_jbed_pim_PIMListImpl_s * , STRING_INSTANCE, STRING_INSTANCE);
jint JBNI_EXPORT JbniS_com_jbed_runtime_AsyncIO_getAsyncStateSize(void);
jboolean JBNI_EXPORT JbniS_com_jbed_runtime_Main_notifyStateChange(jint, jboolean, jint, jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_runtime_Main_setControlSignal(struct INSTANCE_com_jbed_runtime_Signal_s * );
void JBNI_EXPORT OPL_os_intern_freeHeapBlock(jint);
void JBNI_EXPORT OPL_os_intern_getHeapBlock(jint, jint);
jint JBNI_EXPORT OPL_os_getStackSpace(void);
struct INSTANCE_java_lang_Object_s *  JBNI_EXPORT JbniS_com_jbed_runtime_PhoneSystem_getObj0(jint);
jboolean JBNI_EXPORT JbniS_com_jbed_runtime_PhoneSystem_isSupported0(jint);
jboolean JBNI_EXPORT JbniS_com_jbed_runtime_PhoneSystem_setBool0(jint, jboolean);
jboolean JBNI_EXPORT JbniS_com_jbed_runtime_PhoneSystem_setInt0(jint, jint);
void JBNI_EXPORT JbniV_com_jbed_runtime_Signal_nativeInvalidate(struct INSTANCE_com_jbed_runtime_Signal_s * );
void JBNI_EXPORT OPL_os_intern_flushCache(jint, jint);
jlong JBNI_EXPORT CPL_os_getMillisSince1970(void);
void JBNI_EXPORT OPL_os_fatalError(STRING_INSTANCE, struct INSTANCE_java_lang_Object_s * );
jlong JBNI_EXPORT OPL_os_getElapsedMicros(void);
void JBNI_EXPORT OPL_os_resetTimer(void);
void JBNI_EXPORT OPL_os_initTimer(jint);
void JBNI_EXPORT OPL_os_startTimer(void);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativePlayer_nGetMediaConstant(jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativePlayer_nMediaOperation(jint, jint, jint, jint, jint, jint, struct INSTANCE_java_lang_Object_s * );
jint JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativeRecordingSupport_read0(jint, BYTEARRAY);
BYTEARRAY JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativeVideoMpegSupport_nGetSnapshot(jint, STRING_INSTANCE, struct INSTANCE_com_jbed_tina_media_MediaPlayer_s * );
STRING_INSTANCE JBNI_EXPORT JbniS_com_jbed_util_I18N_nGet(jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_fs_ThumbnailManager_createThumbnail0(jint, STRING_INSTANCE, STRING_INSTANCE, jint, jint, jint);
STRING_INSTANCE JBNI_EXPORT JbniS_com_ms_fs_ThumbnailManager_getDefaultThumbnail0(jint, STRING_INSTANCE);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorDictionaryImpl_checkLanguageStatus0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorDictionaryImpl_getInputLanguage0(void);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorDictionaryImpl_getStatus0(void);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorDictionaryImpl_setInputLanguage0(jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorDictionaryImpl_setStatus0(jboolean);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_clearAllText0(jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_createInlineEditor0(STRING_INSTANCE, jint, jint, jint, jint);
void JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_destroy0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_estimateEdtiorHeight0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getBackgroundColor0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getCursor0(jint);
INTARRAY JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getDisplayRect0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getFontColor0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getFontSize0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getIMRegionHeight0(jint);
jint JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getSingleLineHeight0(jint);
STRING_INSTANCE JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_getText0(jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_isFocus0(jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_isVisible0(jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setBackgroundColor0(jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setBorder0(jint, jint, jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setCursor0(jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setCursorStatus0(jint, jboolean);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setDisplayRect0(jint, jint, jint, jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setFocus0(jint, jboolean, jboolean);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setFont0(jint, struct INSTANCE_javax_microedition_lcdui_Font_s * );
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setFontColor0(jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setIMLineColor0(jint, jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setMargin0(jint, jint, jint);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setNumberIndicator0(jint, jboolean);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setPromptText0(jint, STRING_INSTANCE);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setText0(jint, STRING_INSTANCE);
jboolean JBNI_EXPORT JbniS_com_ms_ime_InlineEditorImpl_setVisible0(jint, jboolean);
jint JBNI_EXPORT JbniS_com_ms_service_msa_MSAManagerImpl_getToken0(jboolean, jint);
STRINGARRAY JBNI_EXPORT JbniS_com_ms_service_msa_MSAManagerImpl_getUserInfo0(void);
jint JBNI_EXPORT JbniS_com_ms_service_msa_MSAManagerImpl_refreshToken0(jint);
void JBNI_EXPORT JbniS_com_ms_service_msa_MSAManagerImpl_signOff0(jint);
jboolean JBNI_EXPORT JbniS_com_ms_service_wns_WNSManager_clearNotification0(STRING_INSTANCE);
jboolean JBNI_EXPORT JbniS_com_ms_service_wns_WNSManager_closeChannel0(STRING_INSTANCE);
STRINGARRAY JBNI_EXPORT JbniS_com_ms_service_wns_WNSManager_createChannel0(STRING_INSTANCE, STRING_INSTANCE);
REFARRAY JBNI_EXPORT JbniS_com_ms_service_wns_WNSManager_getMessage0(STRING_INSTANCE, jint);
jint JBNI_EXPORT JbniS_com_ms_service_wns_WNSManager_getMessageCount0(STRING_INSTANCE);
jboolean JBNI_EXPORT JbniS_com_ms_service_wns_WNSManager_getPushServerStatus0(void);
INTARRAY JBNI_EXPORT JbniS_com_ms_text_Text_nativeGetStringInfo(jint, STRING_INSTANCE, struct INSTANCE_javax_microedition_lcdui_Font_s * , jint, jint, jboolean);
void JBNI_EXPORT JbniV_com_sun_midp_lcdui_DeviceCaps_init(struct INSTANCE_com_sun_midp_lcdui_DeviceCaps_s * );
STRING_INSTANCE JBNI_EXPORT JbniS_java_lang_System_getProperty0(STRING_INSTANCE);
void JBNI_EXPORT JbniS_javax_microedition_lcdui_Display_nativeAttach(jint);
void JBNI_EXPORT JbniS_javax_microedition_lcdui_Display_nativeDetach(jint);
jint JBNI_EXPORT JbniV_javax_microedition_lcdui_Font_charWidth(struct INSTANCE_javax_microedition_lcdui_Font_s * , jchar);
jint JBNI_EXPORT JbniV_javax_microedition_lcdui_Font_charsWidth(struct INSTANCE_javax_microedition_lcdui_Font_s * , CHARARRAY, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Font_init(struct INSTANCE_javax_microedition_lcdui_Font_s * , jint, jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_lcdui_Font_stringWidth(struct INSTANCE_javax_microedition_lcdui_Font_s * , STRING_INSTANCE);
jint JBNI_EXPORT JbniV_javax_microedition_lcdui_Font_substringWidth(struct INSTANCE_javax_microedition_lcdui_Font_s * , STRING_INSTANCE, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_copyArea(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawArc(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawChar(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jchar, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawChars(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , CHARARRAY, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawImage(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , struct INSTANCE_javax_microedition_lcdui_Image_s * , jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawLine(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawRGB(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , INTARRAY, jint, jint, jint, jint, jint, jint, jboolean);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawRect(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawRegion(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , struct INSTANCE_javax_microedition_lcdui_Image_s * , jint, jint, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawRoundRect(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawString(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , STRING_INSTANCE, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_drawSubstring(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , STRING_INSTANCE, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_fillArc(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_fillRect(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_fillRoundRect(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_fillTriangle(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint, jint, jint, jint, jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_lcdui_Graphics_getDisplayColor(struct INSTANCE_javax_microedition_lcdui_Graphics_s * , jint);
jint JBNI_EXPORT JbniS_javax_microedition_lcdui_Graphics_getPixel(jint, jint, jboolean);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Image_finalize(struct INSTANCE_javax_microedition_lcdui_Image_s * );
void JBNI_EXPORT JbniV_javax_microedition_lcdui_Image_getRGB(struct INSTANCE_javax_microedition_lcdui_Image_s * , INTARRAY, jint, jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniS_com_jbed_ams_NativeAms_nativeGetEvent(void);
void JBNI_EXPORT JbniS_com_jbed_ams_NativeAms_nativePostEvent(jint, jint, struct INSTANCE_java_lang_Object_s * );
jint JBNI_EXPORT JbniS_com_jbed_cldc_CldcConfig_totalMemory(void);
jint JBNI_EXPORT JbniS_com_jbed_io_GenCharsetConverter_mbsToWcs(jint, BYTEARRAY, jint, jint, CHARARRAY, jint, INTARRAY);
jint JBNI_EXPORT JbniS_com_jbed_io_GenCharsetConverter_wcsToMbs(jint, CHARARRAY, jint, jint, BYTEARRAY, jint);
STRING_INSTANCE JBNI_EXPORT JbniS_com_jbed_io_IoToolkit_nGetBrowserUserAgent(void);
STRINGARRAY JBNI_EXPORT JbniS_com_jbed_io_IoToolkit_nGetSuiteHttpProxyInfo(void);
jint JBNI_EXPORT JbniV_com_jbed_midp_MIDPToolkit_getGameAction(struct INSTANCE_com_jbed_midp_MIDPToolkit_s * , jint);
jint JBNI_EXPORT JbniV_com_jbed_midp_MIDPToolkit_getKeyCode(struct INSTANCE_com_jbed_midp_MIDPToolkit_s * , jint);
STRING_INSTANCE JBNI_EXPORT JbniV_com_jbed_midp_MIDPToolkit_getKeyName(struct INSTANCE_com_jbed_midp_MIDPToolkit_s * , jint);
void JBNI_EXPORT JbniV_com_jbed_midp_lcdui_lookandfeel_peer_PeerLookAndFeel_nRefresh(struct INSTANCE_com_jbed_midp_lcdui_lookandfeel_peer_PeerLookAndFeel_s * , jint, jint, jint, jint);
void JBNI_EXPORT JbniV_com_jbed_pim_ContactListImpl_removeContact0(struct INSTANCE_com_jbed_pim_ContactListImpl_s * , struct INSTANCE_com_jbed_pim_ContactImpl_s * );
INTARRAY JBNI_EXPORT JbniV_com_jbed_pim_EventListImpl_getSuppRRuleFields0(struct INSTANCE_com_jbed_pim_EventListImpl_s * , jint);
void JBNI_EXPORT JbniV_com_jbed_pim_EventListImpl_removeEvent0(struct INSTANCE_com_jbed_pim_EventListImpl_s * , struct INSTANCE_com_jbed_pim_EventImpl_s * );
void JBNI_EXPORT JbniV_com_jbed_pim_PIMImpl_finalize(struct INSTANCE_com_jbed_pim_PIMImpl_s * );
BYTEARRAY JBNI_EXPORT JbniV_com_jbed_pim_PIMImpl_listPIMLists0(struct INSTANCE_com_jbed_pim_PIMImpl_s * , jint);
jint JBNI_EXPORT JbniV_com_jbed_pim_PIMImpl_open0(struct INSTANCE_com_jbed_pim_PIMImpl_s * );
void JBNI_EXPORT JbniV_com_jbed_pim_ToDoListImpl_removeToDo0(struct INSTANCE_com_jbed_pim_ToDoListImpl_s * , struct INSTANCE_com_jbed_pim_ToDoImpl_s * );
void JBNI_EXPORT CPL_os_logChar(jint);
void JBNI_EXPORT OPL_event_start(struct INSTANCE_com_jbed_runtime_SignalQueue_s * );
void JBNI_EXPORT OPL_event_stop(void);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_NativeMediaSystem_nFinalizeMedia(void);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_NativeMediaSystem_nInitializeMedia(void);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativeCoreStreamPlayer_nOpen(struct INSTANCE_com_jbed_tina_media_MediaPlayer_s * , jint, jint, jint, BYTEARRAY, jint);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativeCoreStreamPlayer_nPrepare(struct INSTANCE_com_jbed_tina_media_MediaPlayer_s * , jint, jint, BYTEARRAY, jint);
jint JBNI_EXPORT JbniS_com_jbed_tina_media_player_NativeCoreStreamPlayer_nWrite(struct INSTANCE_com_jbed_tina_media_MediaPlayer_s * , jint, jint, BYTEARRAY, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_io_SmsConnectionThread_nDeleteMessage(struct INSTANCE_javax_microedition_io_SmsConnectionThread_s * );
void JBNI_EXPORT JbniS_javax_microedition_io_SmsConnectionThread_nDeregisterPort(jint, jint);
jboolean JBNI_EXPORT JbniV_javax_microedition_io_SmsConnectionThread_nReadMessage(struct INSTANCE_javax_microedition_io_SmsConnectionThread_s * );
jboolean JBNI_EXPORT JbniS_javax_microedition_io_SmsConnectionThread_nRegisterPort(jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_ImmutableImage_createImmutableCopy(struct INSTANCE_javax_microedition_lcdui_ImmutableImage_s * , jint, jint, struct INSTANCE_javax_microedition_lcdui_Image_s * );
void JBNI_EXPORT JbniV_javax_microedition_lcdui_ImmutableImage_createImmutableImageRegion(struct INSTANCE_javax_microedition_lcdui_ImmutableImage_s * , struct INSTANCE_javax_microedition_lcdui_Image_s * , jint, jint, jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_ImmutableImage_decodeImage(struct INSTANCE_javax_microedition_lcdui_ImmutableImage_s * , BYTEARRAY, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_ImmutableImage_decodeRGBImage(struct INSTANCE_javax_microedition_lcdui_ImmutableImage_s * , INTARRAY, jint, jint, jboolean);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_ImmutableImage_loadIcon(struct INSTANCE_javax_microedition_lcdui_ImmutableImage_s * , STRING_INSTANCE);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_MutableImage_createMutableImageARGB(struct INSTANCE_javax_microedition_lcdui_MutableImage_s * , jint, jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_lcdui_MutableImage_decodeImage(struct INSTANCE_javax_microedition_lcdui_MutableImage_s * , BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_io_DeflaterOutputStream_createDeflater(void);
jint JBNI_EXPORT JbniV_com_jbed_io_DeflaterOutputStream_deflate(struct INSTANCE_com_jbed_io_DeflaterOutputStream_s * , jint, BYTEARRAY, jint, jint, BYTEARRAY, jint, jint, jint);
void JBNI_EXPORT JbniS_com_jbed_io_DeflaterOutputStream_destroyDeflater(jint);
void JBNI_EXPORT JbniV_com_jbed_io_DeflaterOutputStream_finalize(struct INSTANCE_com_jbed_io_DeflaterOutputStream_s * );
jint JBNI_EXPORT JbniS_com_jbed_io_InflaterInputStream_crc32(BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniS_com_jbed_io_InflaterInputStream_createInflater(void);
void JBNI_EXPORT JbniS_com_jbed_io_InflaterInputStream_destroyInflater(jint);
void JBNI_EXPORT JbniV_com_jbed_io_InflaterInputStream_finalize(struct INSTANCE_com_jbed_io_InflaterInputStream_s * );
jint JBNI_EXPORT JbniV_com_jbed_io_InflaterInputStream_inflate(struct INSTANCE_com_jbed_io_InflaterInputStream_s * , jint, BYTEARRAY, jint, jint, BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniV_com_jbed_midp_lcdui_NativeTextEditor_nativeEditText(struct INSTANCE_com_jbed_midp_lcdui_NativeTextEditor_s * , STRING_INSTANCE, STRING_INSTANCE, STRING_INSTANCE, jint, jint, jint, jint);
jboolean JBNI_EXPORT JbniV_com_jbed_midp_lcdui_NativeTextEditor_needToStart(struct INSTANCE_com_jbed_midp_lcdui_NativeTextEditor_s * , jint, jint);
void JBNI_EXPORT JbniV_javax_microedition_io_NetworkConnectionBase_finalize(struct INSTANCE_javax_microedition_io_NetworkConnectionBase_s * );
jint JBNI_EXPORT JbniS_javax_microedition_io_NetworkConnectionBase_getIpNumber0(STRING_INSTANCE);
jint JBNI_EXPORT JbniV_javax_microedition_io_NetworkConnectionBase_getLocalAddress0(struct INSTANCE_javax_microedition_io_NetworkConnectionBase_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_NetworkConnectionBase_getLocalPort0(struct INSTANCE_javax_microedition_io_NetworkConnectionBase_s * );
jboolean JBNI_EXPORT JbniS_javax_microedition_io_NetworkConnectionBase_initializeInternal(void);
jboolean JBNI_EXPORT JbniS_javax_microedition_io_sms_1Protocol_nSend(STRING_INSTANCE, jint, jint, jint, BYTEARRAY, jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_datagram_1Protocol_close0(struct INSTANCE_javax_microedition_io_datagram_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_datagram_1Protocol_getMaximumLength0(struct INSTANCE_javax_microedition_io_datagram_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_datagram_1Protocol_getNominalLength0(struct INSTANCE_javax_microedition_io_datagram_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_datagram_1Protocol_open0(struct INSTANCE_javax_microedition_io_datagram_1Protocol_s * , jint, jboolean, jint);
jlong JBNI_EXPORT JbniV_javax_microedition_io_datagram_1Protocol_receive0(struct INSTANCE_javax_microedition_io_datagram_1Protocol_s * , BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_datagram_1Protocol_send0(struct INSTANCE_javax_microedition_io_datagram_1Protocol_s * , jint, jint, BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_available0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_close0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_flush0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_getAddress0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_getPort0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * );
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_getSocketOpt(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * , jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_open0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * , jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_read0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * , BYTEARRAY, jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_setSocketOpt(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * , jint, jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_shutdownSocket0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * , jint);
jint JBNI_EXPORT JbniV_javax_microedition_io_socket_1Protocol_write0(struct INSTANCE_javax_microedition_io_socket_1Protocol_s * , BYTEARRAY, jint, jint);
#if defined(__cplusplus)
}
#endif
#endif /* _JBED_JAVANATIVE_H_ */
