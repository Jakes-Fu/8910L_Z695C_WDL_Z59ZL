/******************************************************************************
 ** File Name:      mtv_cfg.h                                                 *
 ** Author:         hanbing.zhang                                             *
 ** DATE:           05/08/2008                                                *
 ** Copyright:      2008 Spreatrum, Incoporated. All Rights Reserved.         *
 ** Description:    This file defines the basic configuration for mtv         *
 **                 by customer.                                              *
 ******************************************************************************

 ******************************************************************************
 **                        Edit History                                       *
 ** ------------------------------------------------------------------------- *
 ** DATE           NAME             DESCRIPTION                               *
 ** 05/08/2008     hanbing.zhang        Create.                               *
 ******************************************************************************/
#ifndef _MTV_CTRL_H_
#define _MTV_CTRL_H_

/**---------------------------------------------------------------------------*
 **                         Dependencies                                      *
 **---------------------------------------------------------------------------*/
#include "kd.h"

/**---------------------------------------------------------------------------*
 **                         Compiler Flag                                     *
 **---------------------------------------------------------------------------*/
#ifdef __cplusplus
    extern   "C"
    {
#endif

/**---------------------------------------------------------------------------*
 **                         Defines                                           *
 **---------------------------------------------------------------------------*/
typedef struct mtv_lcd_size_tag
{
    KDuint32 	           width;
    KDuint32 	           height;
}MTV_LCD_SIZE_T;

/**---------------------------------------------------------------------------*
 **                         Global Variables                                  *
 **---------------------------------------------------------------------------*/

/**---------------------------------------------------------------------------*
 **                         Constant Variables                                *
 **---------------------------------------------------------------------------*/

/**---------------------------------------------------------------------------*
 **                         Function Prototypes                               *
 **---------------------------------------------------------------------------*/
/*****************************************************************************/
//  Description:    mtv enable
//  Input      :    
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVIntEnable(KDboolean is_enable);
        
/*****************************************************************************/
//  Description:    mtv reset
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVReset(KDboolean is_tvreset);

/*****************************************************************************/
//  Description:    mtv standby
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVStandby(KDboolean is_tvstby);

/*****************************************************************************/
//  Description:    mtv lcd bypass
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVLCDBypass(KDboolean is_bypass);

/*****************************************************************************/
//  Description:    mtv send int
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVSendInt(void);

/*****************************************************************************/
//  Description:    mtv softswitch control
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVSoftSwitchON(KDboolean is_on);

/*****************************************************************************/
//  Description:    mtv open dummy
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void MTVCtrlOpen_Dummy(void);

/*****************************************************************************/
//  Description:    mtv close dummy
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void MTVCtrlClose_Dummy(void);

/*****************************************************************************/
//  Description:    mtv disable irq
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void MTVCtrlDisableIRQ(void);

/*****************************************************************************/
//  Description:    mtv restore irq
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void MTVCtrlRestoreIRQ(void);

/*****************************************************************************/
//  Description:    mtv int enable
//  Input      :    
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void GPIO_MTVIntEnable(KDboolean is_enable);

/*****************************************************************************/
//  Description:    mtv get lcd buffer
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void *MTV_GetMainLCDBuffer(void);

/*****************************************************************************/
//  Description:    mtv get lcd osd buffer
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
void *MTV_GetLCDOSDBuffer(void);

/*****************************************************************************/
//  Description:    mtv get lcd size
//  Input      :
//  Return     :    None
//  Author     :    hanbing.zhang
//	Note       :
/*****************************************************************************/
MTV_LCD_SIZE_T* MTV_GetLCDSize(KDuint16 lcd_id);

/**---------------------------------------------------------------------------*
 **                         Compiler Flag                                     *
 **---------------------------------------------------------------------------*/
#ifdef __cplusplus
    }
#endif

#endif // _SLEEP_CFG_H_

